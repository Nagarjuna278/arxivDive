{"ast":null,"code":"// Fetch papers from the API\nexport const fetchPapers = async currentPath => {\n  try {\n    const response = await fetch(`${getBaseUrl(8000)}${currentPath}`);\n    const data = await response.json();\n    return data.results.map(result => ({\n      title: result.title,\n      authors: result.authors.map(author => author.name),\n      summary: result.summary,\n      published: new Date(result.published).toLocaleString(),\n      id: result.id,\n      url: `http://arxiv.org/pdf/${result.id}.pdf`\n    }));\n  } catch (error) {\n    console.error('Error fetching papers:', error);\n    return [];\n  }\n};\nconst getBaseUrl = port => {\n  const {\n    protocol,\n    hostname\n  } = window.location;\n  return `${protocol}//${hostname}:${port}`;\n};\n\n// Fetch recommendations for a specific paper\nexport const fetchPaperRecommendations = async paperId => {\n  try {\n    const response = await fetch(`${getBaseUrl(8000)}recom/${paperId}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching recommendations:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["fetchPapers","currentPath","response","fetch","getBaseUrl","data","json","results","map","result","title","authors","author","name","summary","published","Date","toLocaleString","id","url","error","console","port","protocol","hostname","window","location","fetchPaperRecommendations","paperId"],"sources":["/Users/nagarjunareddyguntaka/Desktop/everything/coding/Projects/grad/news/ArxivReader/src/screens/services/api.js"],"sourcesContent":["// Fetch papers from the API\nexport const fetchPapers = async (currentPath) => {\n    try {\n      const response = await fetch(`${getBaseUrl(8000)}${currentPath}`);\n      const data = await response.json();\n      return data.results.map((result) => ({\n        title: result.title,\n        authors: result.authors.map((author) => author.name),\n        summary: result.summary,\n        published: new Date(result.published).toLocaleString(),\n        id: result.id,\n        url: `http://arxiv.org/pdf/${result.id}.pdf`,\n      }));\n    } catch (error) {\n      console.error('Error fetching papers:', error);\n      return [];\n    }\n  };\n  \n  const getBaseUrl = (port) => {\n    const { protocol, hostname } = window.location;\n    return `${protocol}//${hostname}:${port}`;\n  };\n\n  // Fetch recommendations for a specific paper\n  export const fetchPaperRecommendations = async (paperId) => {\n    try {\n      const response = await fetch(`${getBaseUrl(8000)}recom/${paperId}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n      return null;\n    }\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,UAAU,CAAC,IAAI,CAAC,GAAGH,WAAW,EAAE,CAAC;IACjE,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,MAAM,KAAM;MACnCC,KAAK,EAAED,MAAM,CAACC,KAAK;MACnBC,OAAO,EAAEF,MAAM,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC;MACpDC,OAAO,EAAEL,MAAM,CAACK,OAAO;MACvBC,SAAS,EAAE,IAAIC,IAAI,CAACP,MAAM,CAACM,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;MACtDC,EAAE,EAAET,MAAM,CAACS,EAAE;MACbC,GAAG,EAAE,wBAAwBV,MAAM,CAACS,EAAE;IACxC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAMhB,UAAU,GAAIkB,IAAI,IAAK;EAC3B,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGC,MAAM,CAACC,QAAQ;EAC9C,OAAO,GAAGH,QAAQ,KAAKC,QAAQ,IAAIF,IAAI,EAAE;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMK,yBAAyB,GAAG,MAAOC,OAAO,IAAK;EAC1D,IAAI;IACF,MAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,UAAU,CAAC,IAAI,CAAC,SAASwB,OAAO,EAAE,CAAC;IACnE,MAAMvB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}