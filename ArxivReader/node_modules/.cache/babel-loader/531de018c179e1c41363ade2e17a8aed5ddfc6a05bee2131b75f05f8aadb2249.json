{"ast":null,"code":"var _jsxFileName = \"/Users/nagarjunareddyguntaka/Desktop/everything/coding/Projects/grad/news/ArxivReader/src/screens/PaperListScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport PDFViewerScreen from './PDFViewerScreen';\nimport Recommend from './Recommend';\nimport CardView from './CardView'; // Import the CardView component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaperListScreen = () => {\n  _s();\n  // State management\n  const [papers, setPapers] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [recommendedPapers, setRecommendedPapers] = useState(null);\n  const [currentPath, setCurrentPath] = useState('');\n\n  // Hooks for navigation and location\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Fetch papers when the path changes\n  useEffect(() => {\n    const initializePapers = async () => {\n      console.log('Fetching papers...');\n      await fetchPapers();\n      setCurrentPath(location.pathname);\n\n      // Select the first paper by default\n      if (papers.length > 0) {\n        handlePaperSelection(papers[0]);\n      }\n    };\n    initializePapers();\n  }, [location.pathname]);\n\n  // Handle paper selection\n  const handlePaperSelection = async paper => {\n    setSelectedPaper(paper);\n    await fetchPaperRecommendations(paper.id);\n  };\n\n  // Fetch papers from the API\n  const fetchPapers = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000${currentPath}`);\n      const data = await response.json();\n      const formattedPapers = data.results.map(result => ({\n        title: result.title,\n        authors: result.authors.map(author => author.name),\n        summary: result.summary,\n        published: new Date(result.published).toLocaleString(),\n        id: result.id,\n        url: `http://arxiv.org/pdf/${result.id}.pdf`\n      }));\n      setPapers(formattedPapers);\n    } catch (error) {\n      console.error('Error fetching papers:', error);\n    }\n  };\n\n  // Fetch recommendations for a specific paper\n  const fetchPaperRecommendations = async paperId => {\n    try {\n      const response = await fetch(`http://localhost:8000/recom/${paperId}`);\n      const data = await response.json();\n      setRecommendedPapers(data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n      setRecommendedPapers(null);\n    }\n  };\n\n  // Handle search form submission\n  const handleSearch = event => {\n    event.preventDefault();\n    const searchValue = event.target.search.value.trim();\n    if (searchValue) {\n      navigate(`/search/${encodeURIComponent(searchValue)}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.leftPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.navbar,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: styles.logo,\n          children: \"ArXiv Papers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          style: styles.searchForm,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"search\",\n            placeholder: \"Search papers...\",\n            style: styles.searchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.searchButton,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardView, {\n        papers: papers,\n        selectedPaper: selectedPaper,\n        handlePaperSelection: handlePaperSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.recommendSection,\n        children: recommendedPapers ? /*#__PURE__*/_jsxDEV(Recommend, {\n          obj: recommendedPapers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recommendations available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.pdfViewerSection,\n      children: selectedPaper ? /*#__PURE__*/_jsxDEV(PDFViewerScreen, {\n        url: selectedPaper.url,\n        title: selectedPaper.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a paper to view its PDF.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles\n_s(PaperListScreen, \"eTOuBMjC17iO7j8PL4Wuv5B+FJU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PaperListScreen;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    height: '100vh'\n  },\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 20px',\n    backgroundColor: '#f1f1f1',\n    borderBottom: '1px solid #ccc'\n  },\n  leftPanel: {\n    width: '60%',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative'\n  },\n  pdfViewerSection: {\n    width: '40%',\n    borderLeft: '1px solid #ccc',\n    overflow: 'hidden',\n    padding: '10px',\n    backgroundColor: '#fff'\n  },\n  recommendSection: {\n    padding: '20px',\n    backgroundColor: '#f9f9f9',\n    borderTop: '1px solid #ccc',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: '40%',\n    zIndex: 1\n  },\n  searchForm: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchInput: {\n    padding: '8px',\n    borderRadius: '4px',\n    border: '1px solid #ccc',\n    marginRight: '10px',\n    width: '300px'\n  },\n  searchButton: {\n    padding: '8px 16px',\n    borderRadius: '4px',\n    border: 'none',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    cursor: 'pointer'\n  },\n  logo: {\n    margin: 0,\n    fontSize: '24px',\n    color: '#333'\n  }\n};\nexport default PaperListScreen;\nvar _c;\n$RefreshReg$(_c, \"PaperListScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","PDFViewerScreen","Recommend","CardView","jsxDEV","_jsxDEV","PaperListScreen","_s","papers","setPapers","selectedPaper","setSelectedPaper","recommendedPapers","setRecommendedPapers","currentPath","setCurrentPath","navigate","location","initializePapers","console","log","fetchPapers","pathname","length","handlePaperSelection","paper","fetchPaperRecommendations","id","response","fetch","data","json","formattedPapers","results","map","result","title","authors","author","name","summary","published","Date","toLocaleString","url","error","paperId","handleSearch","event","preventDefault","searchValue","target","search","value","trim","encodeURIComponent","style","styles","container","children","leftPanel","navbar","logo","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","searchForm","type","placeholder","searchInput","searchButton","recommendSection","obj","pdfViewerSection","_c","display","flexDirection","width","height","justifyContent","alignItems","padding","backgroundColor","borderBottom","position","borderLeft","overflow","borderTop","bottom","left","right","zIndex","borderRadius","border","marginRight","color","cursor","margin","fontSize","$RefreshReg$"],"sources":["/Users/nagarjunareddyguntaka/Desktop/everything/coding/Projects/grad/news/ArxivReader/src/screens/PaperListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport PDFViewerScreen from './PDFViewerScreen';\nimport Recommend from './Recommend';\nimport CardView from './CardView'; // Import the CardView component\n\nconst PaperListScreen = () => {\n  // State management\n  const [papers, setPapers] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [recommendedPapers, setRecommendedPapers] = useState(null);\n  const [currentPath, setCurrentPath] = useState('');\n\n  // Hooks for navigation and location\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Fetch papers when the path changes\n  useEffect(() => {\n    const initializePapers = async () => {\n      console.log('Fetching papers...');\n      await fetchPapers();\n      setCurrentPath(location.pathname);\n\n      // Select the first paper by default\n      if (papers.length > 0) {\n        handlePaperSelection(papers[0]);\n      }\n    };\n\n    initializePapers();\n  }, [location.pathname]);\n\n  // Handle paper selection\n  const handlePaperSelection = async (paper) => {\n    setSelectedPaper(paper);\n    await fetchPaperRecommendations(paper.id);\n  };\n\n  // Fetch papers from the API\n  const fetchPapers = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000${currentPath}`);\n      const data = await response.json();\n      const formattedPapers = data.results.map((result) => ({\n        title: result.title,\n        authors: result.authors.map((author) => author.name),\n        summary: result.summary,\n        published: new Date(result.published).toLocaleString(),\n        id: result.id,\n        url: `http://arxiv.org/pdf/${result.id}.pdf`,\n      }));\n      setPapers(formattedPapers);\n    } catch (error) {\n      console.error('Error fetching papers:', error);\n    }\n  };\n\n  // Fetch recommendations for a specific paper\n  const fetchPaperRecommendations = async (paperId) => {\n    try {\n      const response = await fetch(`http://localhost:8000/recom/${paperId}`);\n      const data = await response.json();\n      setRecommendedPapers(data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n      setRecommendedPapers(null);\n    }\n  };\n\n  // Handle search form submission\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const searchValue = event.target.search.value.trim();\n    if (searchValue) {\n      navigate(`/search/${encodeURIComponent(searchValue)}`);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      {/* Left Panel */}\n      <div style={styles.leftPanel}>\n        {/* Navbar with Search Bar */}\n        <div style={styles.navbar}>\n          <h1 style={styles.logo}>ArXiv Papers</h1>\n          <form onSubmit={handleSearch} style={styles.searchForm}>\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search papers...\"\n              style={styles.searchInput}\n            />\n            <button type=\"submit\" style={styles.searchButton}>\n              Search\n            </button>\n          </form>\n        </div>\n\n        {/* Paper List */}\n        <CardView\n          papers={papers}\n          selectedPaper={selectedPaper}\n          handlePaperSelection={handlePaperSelection}\n        />\n\n        {/* Recommendations Section */}\n        <div style={styles.recommendSection}>\n          {recommendedPapers ? (\n            <Recommend obj={recommendedPapers} />\n          ) : (\n            <p>No recommendations available.</p>\n          )}\n        </div>\n      </div>\n\n      {/* Right Panel: PDF Viewer */}\n      <div style={styles.pdfViewerSection}>\n        {selectedPaper ? (\n          <PDFViewerScreen url={selectedPaper.url} title={selectedPaper.title} />\n        ) : (\n          <p>Select a paper to view its PDF.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Styles\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    height: '100vh',\n  },\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 20px',\n    backgroundColor: '#f1f1f1',\n    borderBottom: '1px solid #ccc',\n  },\n  leftPanel: {\n    width: '60%',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n  },\n  pdfViewerSection: {\n    width: '40%',\n    borderLeft: '1px solid #ccc',\n    overflow: 'hidden',\n    padding: '10px',\n    backgroundColor: '#fff',\n  },\n  recommendSection: {\n    padding: '20px',\n    backgroundColor: '#f9f9f9',\n    borderTop: '1px solid #ccc',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: '40%',\n    zIndex: 1,\n  },\n  searchForm: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  searchInput: {\n    padding: '8px',\n    borderRadius: '4px',\n    border: '1px solid #ccc',\n    marginRight: '10px',\n    width: '300px',\n  },\n  searchButton: {\n    padding: '8px 16px',\n    borderRadius: '4px',\n    border: 'none',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    cursor: 'pointer',\n  },\n  logo: {\n    margin: 0,\n    fontSize: '24px',\n    color: '#333',\n  },\n};\n\nexport default PaperListScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMmB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAMC,WAAW,CAAC,CAAC;MACnBN,cAAc,CAACE,QAAQ,CAACK,QAAQ,CAAC;;MAEjC;MACA,IAAId,MAAM,CAACe,MAAM,GAAG,CAAC,EAAE;QACrBC,oBAAoB,CAAChB,MAAM,CAAC,CAAC,CAAC,CAAC;MACjC;IACF,CAAC;IAEDU,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACD,QAAQ,CAACK,QAAQ,CAAC,CAAC;;EAEvB;EACA,MAAME,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC5Cd,gBAAgB,CAACc,KAAK,CAAC;IACvB,MAAMC,yBAAyB,CAACD,KAAK,CAACE,EAAE,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMN,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwBf,WAAW,EAAE,CAAC;MACnE,MAAMgB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,eAAe,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,KAAM;QACpDC,KAAK,EAAED,MAAM,CAACC,KAAK;QACnBC,OAAO,EAAEF,MAAM,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC;QACpDC,OAAO,EAAEL,MAAM,CAACK,OAAO;QACvBC,SAAS,EAAE,IAAIC,IAAI,CAACP,MAAM,CAACM,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;QACtDhB,EAAE,EAAEQ,MAAM,CAACR,EAAE;QACbiB,GAAG,EAAE,wBAAwBT,MAAM,CAACR,EAAE;MACxC,CAAC,CAAC,CAAC;MACHlB,SAAS,CAACuB,eAAe,CAAC;IAC5B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd1B,OAAO,CAAC0B,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMnB,yBAAyB,GAAG,MAAOoB,OAAO,IAAK;IACnD,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BiB,OAAO,EAAE,CAAC;MACtE,MAAMhB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClClB,oBAAoB,CAACiB,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACd1B,OAAO,CAAC0B,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDhC,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMkC,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IACpD,IAAIJ,WAAW,EAAE;MACflC,QAAQ,CAAC,WAAWuC,kBAAkB,CAACL,WAAW,CAAC,EAAE,CAAC;IACxD;EACF,CAAC;EAED,oBACE7C,OAAA;IAAKmD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAE3BtD,OAAA;MAAKmD,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,gBAE3BtD,OAAA;QAAKmD,KAAK,EAAEC,MAAM,CAACI,MAAO;QAAAF,QAAA,gBACxBtD,OAAA;UAAImD,KAAK,EAAEC,MAAM,CAACK,IAAK;UAAAH,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzC7D,OAAA;UAAM8D,QAAQ,EAAEpB,YAAa;UAACS,KAAK,EAAEC,MAAM,CAACW,UAAW;UAAAT,QAAA,gBACrDtD,OAAA;YACEgE,IAAI,EAAC,MAAM;YACX9B,IAAI,EAAC,QAAQ;YACb+B,WAAW,EAAC,kBAAkB;YAC9Bd,KAAK,EAAEC,MAAM,CAACc;UAAY;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACF7D,OAAA;YAAQgE,IAAI,EAAC,QAAQ;YAACb,KAAK,EAAEC,MAAM,CAACe,YAAa;YAAAb,QAAA,EAAC;UAElD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGN7D,OAAA,CAACF,QAAQ;QACPK,MAAM,EAAEA,MAAO;QACfE,aAAa,EAAEA,aAAc;QAC7Bc,oBAAoB,EAAEA;MAAqB;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eAGF7D,OAAA;QAAKmD,KAAK,EAAEC,MAAM,CAACgB,gBAAiB;QAAAd,QAAA,EACjC/C,iBAAiB,gBAChBP,OAAA,CAACH,SAAS;UAACwE,GAAG,EAAE9D;QAAkB;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAErC7D,OAAA;UAAAsD,QAAA,EAAG;QAA6B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACpC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN7D,OAAA;MAAKmD,KAAK,EAAEC,MAAM,CAACkB,gBAAiB;MAAAhB,QAAA,EACjCjD,aAAa,gBACZL,OAAA,CAACJ,eAAe;QAAC2C,GAAG,EAAElC,aAAa,CAACkC,GAAI;QAACR,KAAK,EAAE1B,aAAa,CAAC0B;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEvE7D,OAAA;QAAAsD,QAAA,EAAG;MAA+B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA3D,EAAA,CA1HMD,eAAe;EAAA,QAQFP,WAAW,EACXC,WAAW;AAAA;AAAA4E,EAAA,GATxBtE,eAAe;AA2HrB,MAAMmD,MAAM,GAAG;EACbC,SAAS,EAAE;IACTmB,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDnB,MAAM,EAAE;IACNgB,OAAO,EAAE,MAAM;IACfI,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,WAAW;IACpBC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE;EAChB,CAAC;EACDzB,SAAS,EAAE;IACTmB,KAAK,EAAE,KAAK;IACZF,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBQ,QAAQ,EAAE;EACZ,CAAC;EACDX,gBAAgB,EAAE;IAChBI,KAAK,EAAE,KAAK;IACZQ,UAAU,EAAE,gBAAgB;IAC5BC,QAAQ,EAAE,QAAQ;IAClBL,OAAO,EAAE,MAAM;IACfC,eAAe,EAAE;EACnB,CAAC;EACDX,gBAAgB,EAAE;IAChBU,OAAO,EAAE,MAAM;IACfC,eAAe,EAAE,SAAS;IAC1BK,SAAS,EAAE,gBAAgB;IAC3BH,QAAQ,EAAE,OAAO;IACjBI,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACV,CAAC;EACDzB,UAAU,EAAE;IACVS,OAAO,EAAE,MAAM;IACfK,UAAU,EAAE;EACd,CAAC;EACDX,WAAW,EAAE;IACXY,OAAO,EAAE,KAAK;IACdW,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,gBAAgB;IACxBC,WAAW,EAAE,MAAM;IACnBjB,KAAK,EAAE;EACT,CAAC;EACDP,YAAY,EAAE;IACZW,OAAO,EAAE,UAAU;IACnBW,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,MAAM;IACdX,eAAe,EAAE,SAAS;IAC1Ba,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDpC,IAAI,EAAE;IACJqC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,MAAM;IAChBH,KAAK,EAAE;EACT;AACF,CAAC;AAED,eAAe3F,eAAe;AAAC,IAAAsE,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}